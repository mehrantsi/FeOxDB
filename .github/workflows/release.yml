name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true

  build-release:
    name: Build Release Binaries
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: libfeoxdb.so
            asset_name: libfeoxdb-linux-amd64.so
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: libfeoxdb.so
            asset_name: libfeoxdb-linux-arm64.so
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: libfeoxdb.dylib
            asset_name: libfeoxdb-macos-amd64.dylib
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: libfeoxdb.dylib
            asset_name: libfeoxdb-macos-arm64.dylib
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: feoxdb.dll
            asset_name: feoxdb-windows-amd64.dll
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
      
      - name: Build release binary
        run: |
          cargo build --release --target ${{ matrix.target }}
          ls -la target/${{ matrix.target }}/release/
      
      - name: Build C library
        run: |
          cargo build --release --target ${{ matrix.target }} --lib
        continue-on-error: true
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ./target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          tag_name: ${{ github.ref_name }}
        continue-on-error: true

  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: [build-release]
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      
      - name: Verify package
        run: cargo package --verbose
      
      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}